//The following query list the users who withdraw the LAPS password successfully in the last 30 days.
let startDate = ago(30d);
let endDate = now();
AuditLogs | where OperationName =="Recover device local administrator password"
 and todatetime(TimeGenerated) between (startDate .. endDate)
| summarize arg_max(TimeGenerated,*) by CorrelationId 
| extend parsedInitedBy= parse_json(InitiatedBy)
| extend UserPrincipalName = tostring(parsedInitedBy.user.userPrincipalName)
| extend parsedTargetResources= parse_json(TargetResources)
| mv-expand parsedTargetResources // Expand the array into individual rows
| extend DeviceName = tostring(parsedTargetResources.displayName)
| extend Timestamp_HKT = format_datetime(datetime_utc_to_local(ActivityDateTime, 'Singapore'), 'dd/M/yyyy hh:mm:ss tt')
| project Timestamp_HKT,DeviceName,UserPrincipalName,Result,CorrelationId

//The following query provides the list of all users and count of devices withdaw LAPS password.

let startDate = ago(30d);
let endDate = now();
AuditLogs
| where OperationName == "Recover device local administrator password"
  and TimeGenerated between (startDate .. endDate)
| summarize arg_max(TimeGenerated, *) by CorrelationId
| extend parsedInitiatedBy = parse_json(InitiatedBy)
| extend UserPrincipalName = tostring(parsedInitiatedBy.user.userPrincipalName)
| extend parsedTargetResources = parse_json(TargetResources)
| mv-expand parsedTargetResources // Expand the array into individual rows
| extend DeviceName = tostring(parsedTargetResources.displayName)
| summarize DeviceCount = dcount(DeviceName) by UserPrincipalName
| project UserPrincipalName, DeviceCount
| order by DeviceCount desc

//The following query provides the list of LAPS password events time range series.
let startDate = ago(30d);
let endDate = now();
AuditLogs
| where OperationName == "Recover device local administrator password"
  and TimeGenerated between (startDate .. endDate)
| summarize arg_max(TimeGenerated, *) by CorrelationId
| extend parsedInitiatedBy = parse_json(InitiatedBy)
| extend UserPrincipalName = tostring(parsedInitiatedBy.user.userPrincipalName)
| extend parsedTargetResources = parse_json(TargetResources)
| mv-expand parsedTargetResources // Expand the array into individual rows
| extend DeviceName = tostring(parsedTargetResources.displayName)
| summarize DeviceCount = count() by bin(TimeGenerated, 1d)
| order by TimeGenerated asc
| render timechart  